# Создать собственный класс-исключение, который должен проверять содержимое списка на
# наличие только чисел. Проверить работу исключения на реальном примере. Запрашивать у
# пользователя данные и заполнять список необходимо только числами. Класс-исключение
# должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
# пользователь сам не остановит работу скрипта, введя, например, команду «stop». При этом
# скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для этого задания примем, что пользователь может вводить только числа и
# строки. Во время ввода пользователем очередного элемента необходимо реализовать
# проверку типа элемента. Вносить его в список, только если введено число. Класс-исключение
# должен не позволить пользователю ввести текст (не число) и отобразить соответствующее
# сообщение. При этом работа скрипта не должна завершаться
class ValError:
    def __init__(self):
        pass
    @classmethod
    def valid(cls):
        input_list = []
        while True:
            try:
                a = input('Введите число: ')
                if str(a) == 'stop':
                    print(f'Скрипт завершён')
                    break
                input_list.append(int(a))
                print(f'Рабочий список {input_list}')
            except ValueError:
                b = input('Ошибка! Введено не число! Продолжить? Y/N ')
                if b == 'Y' or b == 'y':
                    pass
                elif b == 'N' or b == 'n':
                    exit('Вы завершили скрипт')
ValError.valid()
"""РЕШЕНО"""

